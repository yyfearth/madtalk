// Generated by eXtraCoffeeScript 1.2.0r
(function() {
"use strict"
  var DeskNotifier, api, list, sync;

  api = window.webkitNotifications;

  /*
  The static class controls desktop notification.
  Only supports Chrome and cannot be used on local file system.
  */


  DeskNotifier = (function() {

    DeskNotifier.name = 'DeskNotifier';

    function DeskNotifier() {}

    DeskNotifier.list = [];

    /*
    	Ask for desktop notification permission.
    	@para onAnswered:function callback when answered.
    		@para isEnabled:boolean whether the permission is granted
    	@return object this object
    */


    DeskNotifier.askPermission = function(onAnswered) {
      if (!this.isSupported || this.isEnabled) return this;
      api.requestPermission(function() {
        if (typeof onAnswered === 'function') onAnswered(this.isEnabled);
      });
      return this;
    };

    /*
    	Pop out a notification
    	[
    		@para a:string the content
    	]
    	[
    		@para a:string the title
    		@para b:string the content
    	]
    	[
    		@para a:string the icon URI
    		@para b:string the title
    		@para c:string the content
    		@para d:number the time to close notification automatically
    		@para e:boolean default true, whether the notification is allowed to be closed by mouse click
    	]
    	@return object this object
    */


    DeskNotifier.notify = function(a, b, c, d, e) {
      var arg;
      if (!this.isSupported) return this;
      if ((a != null) && typeof a === 'object') {
        arg = a;
      } else {
        arg = {
          iconPath: '',
          click2Close: e || true
        };
        if (!(b != null)) {
          arg.content = a;
        } else if (!(c != null)) {
          arg.title = a;
          arg.content = b;
        } else {
          arg.iconPath = a;
          arg.title = b;
          arg.content = c;
          arg.timeout = d;
        }
      }
      if (this.isEnabled) {
        this._notify(arg);
      } else {
        this.askPermission(function(isEnabled) {
          if (isEnabled) return this._notify(arg);
        });
      }
      return this;
    };

    /*
    	Pop out a notification.
    */


    DeskNotifier._notify = function(_arg) {
      var click2Close, content, iconPath, notification, timeout, title;
      iconPath = _arg.iconPath, title = _arg.title, content = _arg.content, timeout = _arg.timeout, click2Close = _arg.click2Close;
      if (!content) throw 'content is necessary';
      if (iconPath == null) iconPath = '';
      if (title == null) title = this.title || '';
      if (!((timeout != null) > 0)) timeout = 0;
      if (click2Close == null) click2Close = false;
      notification = api.createNotification(iconPath, title, content);
      this.list.push(notification);
      notification.addEventListener('close', function(e) {
        var index;
        index = DeskNotifier.list.indexOf(notification);
        if (index >= 0) return DeskNotifier.list.splice(index, 1);
      });
      notification.addEventListener('error', function(e) {
        var index;
        console.log('error', DeskNotifier.list);
        index = DeskNotifier.list.indexOf(notification);
        if (index >= 0) return DeskNotifier.list.splice(index, 1);
      });
      if (click2Close) {
        notification.addEventListener('click', function() {
          return notification.cancel();
        });
      }
      if (typeof timeout === 'number' && timeout > 0) {
        setTimeout(function() {
          return notification.cancel();
        }, timeout);
      }
      notification.show();
      return this;
    };

    return DeskNotifier;

  })();

  /*
  Accessor Properties
  */


  Object.defineProperties(DeskNotifier, {
    /*
    	@return boolean whether the browser supports the feature
    */

    isSupported: {
      get: function() {
        return api != null;
      }
      /*
      	@return boolean whether the browser permits desktop notification
      */

    },
    isEnabled: {
      get: function() {
        return (api != null) && api.checkPermission() === 0;
      }
    }
  });

  /* Unit Test
  */


  window.DeskNotifier = DeskNotifier;

  list = [
    function() {
      return DeskNotifier.notify({
        iconPath: 'https://developer.mozilla.org/favicon.ico',
        title: 'Wait 5 seconds',
        content: 'Pass parameters as an object',
        timeout: 5000,
        click2Close: false
      });
    }, function() {
      return DeskNotifier.notify('https://developer.mozilla.org/favicon.ico', 'title', '3s', 3000);
    }, function() {
      return DeskNotifier.notify('click me');
    }, function() {
      return DeskNotifier.notify('title', 'click me');
    }, function() {
      return DeskNotifier.notify('https://developer.mozilla.org/favicon.ico', 'title', 'click icon');
    }
  ];

  sync = function(list, timeout) {
    var func;
    if (func = list.shift()) {
      func();
      if (list.length > 0) {
        setTimeout(function() {
          return sync(list, timeout);
        }, timeout);
      }
    }
    return this;
  };

  sync(list, 500);

}).call(this);
